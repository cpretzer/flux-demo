apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    generation: 1
    labels:
      app: poc-ui
      component: demo
    name: poc-ui
    namespace: demo
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: poc-ui
        component: demo
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: poc-ui
          component: demo
      spec:
        containers:
        - env:
          - name: WEATHER_SERVICE_URL
            value: http://weather-service:8080
          - name: MAPS_SERVICE_URL
            value: http://maps-service:8080
          image: cpretzer/react-frontend:demo
          imagePullPolicy: Always
          name: poc-ui
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: docker-secret
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: maps
      component: demo
    name: maps
    namespace: demo
    selfLink: /apis/extensions/v1beta1/namespaces/demo/deployments/maps
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: maps
        component: demo
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: maps
          component: demo
      spec:
        containers:
        - env:
          - name: GOOGLE_KEY
            valueFrom:
              secretKeyRef:
                name: maps-service-secret
                key: GOOGLE_KEY
          - name: WEATHER_URL
            value: http://weather-service:8080?lat=%v&lng=%v
          image: cpretzer/google-places-service:demo
          imagePullPolicy: Always
          name: maps
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: docker-secret
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
